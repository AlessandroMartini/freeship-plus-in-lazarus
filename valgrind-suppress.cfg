# There are three kinds of suppressions in this file.
# 1. third party stuff we have no control over
#
# 2. intentional unit test errors, or stuff that is somehow a false positive
# in our own code, or stuff that is so trivial it's not worth fixing
#
# 3. Suppressions for real FreeShip bugs that are not yet fixed.
# These should all be in FreeShip bug tracking system (but a few aren't yet).
# Periodically we should sweep this file and the bug tracker clean by
# running overnight and removing outdated bugs/suppressions.
#-----------------------------------------------------------------------

# 1. third party stuff we have no control over
{
   Uninitialized value in deflate
   Memcheck:Cond
   ...
   fun:MOZ_Z_deflate
}
{
   gtk developers don't like cleaning up one-time leaks.  See http://mail.gnome.org/archives/gtk-devel-list/2004-April/msg00230.html
   Memcheck:Leak
   ...
   fun:gtk_init_check
}
{
   Fontconfig leak?
   Memcheck:Leak
   ...
   fun:XML_ParseBuffer
   fun:FcConfigParseAndLoad
}
{
   bug_9245_FcConfigAppFontAddFile_leak
   Memcheck:Leak
   ...
   fun:FcConfigAppFontAddFile
}
{
   # See also http://www.gnome.org/~johan/gtk.suppression
   # (which has a smattering of similar pango suppressions)
   pango_font_leak_todo
   Memcheck:Leak
   ...
   fun:FcFontRenderPrepare
   obj:*
   fun:pango_font_map_load_fontset
}
{
   pango_font_leak_todo_2
   Memcheck:Leak
   fun:malloc
   fun:g_malloc
   fun:g_strdup
   fun:pango_script_get_sample_language
   ...
   fun:pango_font_get_metrics
}
{
   pango_font_leak_todo_3
   Memcheck:Leak
   ...
   fun:FcFontRenderPrepare
   obj:*
   obj:*
   fun:pango_itemize_with_base_dir
}
{
   pango_font_leak_todo_4
   Memcheck:Leak
   ...
   fun:FcFontRenderPrepare
   ...
   fun:pango_ot_buffer_output
}
{
   pango_font_leak_todo_5
   Memcheck:Leak
   ...
   fun:FcFontRenderPrepare
   obj:*
   fun:pango_context_get_metrics
}
{
   # Fontconfig leak, seen in shard 16 of 20 of ui_tests
   # See https://bugs.freedesktop.org/show_bug.cgi?id=8428
   # and http://www.gnome.org/~johan/gtk.suppression
   fontconfig_bug_8428
   Memcheck:Leak
   ...
   fun:realloc
   fun:FcPatternObjectInsertElt
   fun:FcPatternObjectAddWithBinding
}
{
   # Another permutation of previous leak.
   fontconfig_bug_8428_2
   Memcheck:Leak
   ...
   fun:realloc
   fun:FcPatternObjectInsertElt
   fun:FcPatternObjectAdd
}
{
   bug_18590
   Memcheck:Leak
   ...
   fun:malloc
   fun:FcConfigValues
   fun:FcConfigValues
   fun:FcConfigValues
   fun:FcConfigValues
   fun:FcConfigValues
   fun:FcConfigValues
   fun:FcConfigValues
   fun:FcConfigValues
   fun:FcConfigSubstituteWithPat
   fun:FcConfigSubstitute
}
{
  bug_46177_a
  Memcheck:Leak
  ...
  fun:FcCharSetOperate
  fun:FcFontSetSort
  fun:FcFontSort
  ...
  fun:pango_layout_get_pixel_size
}
{
  bug_46177_b
  Memcheck:Leak
  ...
  fun:FcCharSetFindLeafCreate
  fun:FcCharSetAddLeaf
  fun:FcCharSetOperate
  fun:FcFontSetSort
  fun:FcFontSort
  ...
  fun:pango_layout_get_iter
}
{
  bug_46177_c
  Memcheck:Leak
  ...
  fun:FcCharSetFindLeafCreate
  fun:FcCharSetAddLeaf
  fun:FcCharSetOperate
  fun:FcFontSetSort
  fun:FcFontSort
  ...
  fun:pango_layout_line_get_extents
}
{
   dlopen invalid read, probably a bug in glibc.  TODO(dkegel): file glibc bug
   Memcheck:Value4
   ...
   fun:dlopen@@GLIBC_2.1
   fun:PR_LoadLibraryWithFlags
}
{
   glibc leak.  See also http://sources.redhat.com/bugzilla/show_bug.cgi?id=2451
   Memcheck:Leak
   fun:malloc
   fun:_dl_map_object_from_fd
}
{
   Pure NSS leak, does not involve glibc.  TODO(dkegel): track down and fix or file bug.
   Memcheck:Leak
   ...
   fun:NSS_NoDB_Init
}
{
   Another pure NSS leak, does not involve glibc.  TODO(dkegel): track down and fix or file bug.  Shows up under --show-reachable=yes.
   Memcheck:Leak
   ...
   fun:SECMOD_LoadUserModule
}
{
   Pure NSS leak, does not involve glibc.
   Memcheck:Leak
   ...
   fun:SECMOD_AddNewModule
}
{
   bug_12614
   Memcheck:Leak
   fun:?alloc
   ...
   fun:PR_LoadLibraryWithFlags
   ...
   fun:SECMOD_LoadModule
}
{
   libc_dynamiclinker_foo
   Memcheck:Cond
   obj:/lib*/ld-2.*.so
   obj:/lib*/ld-2.*.so
}
{
   libc_dynamiclinker_bar
   Memcheck:Addr4
   obj:/lib*/ld-2.*.so
   obj:/lib*/ld-2.*.so
}
{
   libc_dynamiclinker_bar_2
   Memcheck:Jump
   obj:*
   obj:/lib*/ld-2.*.so
}
{
   FIXME epoll uninitialized data 1
   Memcheck:Param
   epoll_ctl(epfd)
   fun:syscall
   fun:event_add
}
{
   FIXME epoll uninitialized data 2
   Memcheck:Param
   epoll_ctl(epfd)
   fun:syscall
   fun:event_del
}
{
   FIXME epoll uninitialized data 3
   Memcheck:Param
   epoll_wait(epfd)
   fun:syscall
   fun:event_base_loop
}
# zlib-1.2.x uses uninitialised memory in some tricky way which
# apparently is harmless (it must amount to a vectorised while-loop,
# nothing else makes sense).  Fools Memcheck though.  See the mentioned
# URL for details.
# Valgrind already suppresses deflate-related errors.  These rules
# filter "*flate", capturing issues with both deflate and inflate.
{
   zlib-1.2.x trickyness (1a): See http://www.zlib.net/zlib_faq.html#faq36
   Memcheck:Cond
   obj:/*lib*/libz.so.1.2.*
   ...
   obj:/*lib*/libz.so.1.2.*
   fun:*flate
}
{
   zlib-1.2.x trickyness (1b): See http://www.zlib.net/zlib_faq.html#faq36
   Memcheck:Cond
   obj:/*lib*/libz.so.1.2.*
   fun:*flate
}
{
   zlib-1.2.x trickyness (2a): See http://www.zlib.net/zlib_faq.html#faq36
   Memcheck:Value8
   obj:/*lib*/libz.so.1.2.*
   ...
   obj:/*lib*/libz.so.1.2.*
   fun:*flate
}
{
   zlib-1.2.x trickyness (2b): See http://www.zlib.net/zlib_faq.html#faq36
   Memcheck:Value8
   obj:/*lib*/libz.so.1.2.*
   fun:*flate
}
{
   zlib-1.2.x trickyness (3a): See http://www.zlib.net/zlib_faq.html#faq36
   Memcheck:Value4
   obj:/*lib*/libz.so.1.2.*
   ...
   obj:/*lib*/libz.so.1.2.*
   fun:*flate
}
{
   zlib-1.2.x trickyness (3b): See http://www.zlib.net/zlib_faq.html#faq36
   Memcheck:Value4
   obj:/*lib*/libz.so.1.2.*
   fun:*flate
}
{
  # zlib is smarter than we are:
  #   http://www.zlib.net/zlib_faq.html#faq36
  zlib_conditional_jump_performance_a
  Memcheck:Value4
  ...
  fun:inflate
  fun:_ZN4spdy10SpdyFramer26DecompressFrameWithZStreamERKNS_9SpdyFrameEP10z_stream_s
  fun:_ZN4spdy10SpdyFramer22DecompressControlFrameERKNS_16SpdyControlFrameE
  fun:_ZN4spdy10SpdyFramer15DecompressFrameERKNS_9SpdyFrameE
}
{
  # zlib is smarter than we are:
  #   http://www.zlib.net/zlib_faq.html#faq36
  zlib_conditional_jump_performance_b
  Memcheck:Value8
  ...
  fun:inflate
  fun:_ZN4spdy10SpdyFramer26DecompressFrameWithZStreamERKNS_9SpdyFrameEP10z_stream_s
  fun:_ZN4spdy10SpdyFramer22DecompressControlFrameERKNS_16SpdyControlFrameE
  fun:_ZN4spdy10SpdyFramer15DecompressFrameERKNS_9SpdyFrameE
}
{
  # zlib is smarter than we are:
  #   http://www.zlib.net/zlib_faq.html#faq36
  zlib_conditional_jump_performance_c
  Memcheck:Value8
  ...
  fun:inflate
  fun:_ZN4spdy10SpdyFramer15DecompressFrameEPKNS_9SpdyFrameE
}
{
   bug_30667
   Memcheck:Cond
   ...
   fun:inflate
   fun:_ZN4spdy10SpdyFramer26DecompressFrameWithZStreamERKNS_9SpdyFrameEP10z_stream_s
   fun:_ZN4spdy10SpdyFramer22DecompressControlFrameERKNS_16SpdyControlFrameE
   fun:_ZN4spdy10SpdyFramer15DecompressFrameERKNS_9SpdyFrameE
}
{
  zlibz_value4_deflate_libpng
  Memcheck:Value4
  ...
  fun:deflate*
  ...
  fun:*png*
}
#-- end of zlib filters
{
   bug_33394
   Memcheck:Leak
   fun:calloc
   fun:PR_Calloc
   fun:PR_NewLock
   fun:_PR_UnixInit
   fun:_PR_ImplicitInitialization
   ...
   fun:_ZN4base14EnsureNSPRInitEv
}
{
   bug_33394_b
   Memcheck:Leak
   fun:calloc
   fun:PR_Calloc
   fun:PR_NewMonitor
   fun:_PR_UnixInit
   fun:_PR_ImplicitInitialization
   ...
   fun:_ZN4base14EnsureNSPRInitEv
}
{
   # Looks like a leak in gtk's code when loading the im context module.
   bug_41231
   Memcheck:Leak
   ...
   fun:malloc
   fun:g_malloc
   fun:g_strdup
   fun:gtk_im_multicontext_get_slave
   fun:gtk_im_multicontext_set_client_window
   fun:gtk_im_context_set_client_window
}
{
   bug_51332a
   Memcheck:Leak
   ...
   fun:PORT_NewArena_Util
   fun:sec_pkcs7_create_content_info
   fun:SEC_PKCS7CreateData
   fun:sec_pkcs12_encoder_start_context
   fun:SEC_PKCS12Encode
}
{
   bug_51332b
   Memcheck:Leak
   ...
   fun:PORT_ArenaZAlloc_Util
   fun:sec_pkcs7_create_content_info
   fun:SEC_PKCS7CreateData
   fun:sec_pkcs12_encoder_start_context
   fun:SEC_PKCS12Encode
}
{
   bug_51332c
   Memcheck:Leak
   fun:calloc
   fun:PORT_ZAlloc_Util
   fun:PORT_NewArena_Util
   fun:sec_pkcs7_create_content_info
   fun:sec_pkcs12_encoder_start_context
   fun:SEC_PKCS12Encode
}
{
   bug_51330
   Memcheck:Leak
   ...
   fun:p12u_DigestOpen
   ...
   fun:SEC_PKCS12DecoderUpdate
}
{
   bug_51328a
   Memcheck:Leak
   ...
   fun:SEC_ASN1DecoderUpdate_Util
   ...
   fun:SEC_ASN1DecoderUpdate_Util
   fun:SEC_PKCS7DecoderUpdate
   ...
   fun:SEC_ASN1DecoderUpdate_Util
   fun:SEC_PKCS12DecoderUpdate
}
{
   bug_51328b
   Memcheck:Leak
   ...
   fun:SEC_PKCS7DecoderStart
   ...
   fun:SEC_ASN1DecoderUpdate_Util
   fun:SEC_PKCS12DecoderUpdate
}
{
   bug_58730_strlen_addr8
   Memcheck:Addr8
   fun:__strlen_sse2
}
{
   bug_58730_strlen_cond
   Memcheck:Cond
   fun:__strlen_sse2
}
{
   bug_58730_strcmp_addr8
   Memcheck:Addr8
   fun:__strcmp_ssse3
}
{
   bug_58730_strcmp_cond
   Memcheck:Cond
   fun:__strcmp_ssse3
}
{
   bug_58730_strcmp_value8
   Memcheck:Value8
   fun:__strcmp_ssse3
}
{
   bug_58730_strncmp_value8
   Memcheck:Value8
   fun:__strncmp_ssse3
}
{
   bug_58730_memmove_value4
   Memcheck:Value4
   fun:__memmove_ssse3
}
{
   bug_58730_memmove_cond
   Memcheck:Cond
   fun:__memmove_ssse3
}
{
   bug_58730_memcpy_value4
   Memcheck:Value4
   fun:__memcpy_ssse3
}
{
   bug_58730_memcpy_addr8
   Memcheck:Addr8
   fun:__memcpy_ssse3
}
{
   bug_58730_memcpy_cond
   Memcheck:Cond
   fun:__memcpy_ssse3
}
{
   bug_58730_memmove_chk_cond
   Memcheck:Cond
   fun:__memmove_chk_ssse3
}
{
   bug_58730_libc.so_addr8
   Memcheck:Addr8
   obj:/lib/libc-2.*.so
}
{
   bug_58730_libc.so_cond
   Memcheck:Cond
   obj:/lib/libc-2.*.so
}
{
   bug_58730_libc.so_value8
   Memcheck:Value8
   obj:/lib/libc-2.11.1.so
}
{
   # I believe it's a bug in gtk+-2.12.x and should already be fixed in recent gtk.
   bug_61685
   Memcheck:Leak
   fun:malloc
   ...
   fun:gtk_text_buffer_select_range
   fun:_ZN23AutocompleteEditViewGtk16SetSelectedRangeERKNS_9CharRangeE
   fun:_ZN23AutocompleteEditViewGtk23SetTextAndSelectedRangeERKSbIwSt11char_traitsIwESaIwEERKNS_9CharRangeE
   fun:_ZN23AutocompleteEditViewGtk24SetWindowTextAndCaretPosERKSbIwSt11char_traitsIwESaIwEEj
   fun:_ZN21AutocompleteEditModel6RevertEv
   fun:_ZN23AutocompleteEditViewGtk9RevertAllEv
   fun:_ZN23AutocompleteEditViewGtk6UpdateEPK11TabContents
   fun:_ZN15LocationBarView6UpdateEPK11TabContents
}
{
   bug_66941
   Memcheck:Leak
   ...
   fun:STAN_ChangeCertTrust
   fun:CERT_ChangeCertTrust
}

##### --------------- added for FreeShip -----------------

{
# Syscall param writev(vector[...]) points to uninitialised byte(s)
   FalsPos_from_FORMS.TCUSTOMFORM.SHOWMODAL
   Memcheck:Param
	writev(vector[...])
	...
	fun:xcb_writev
	...
	fun:XCreateBitmapFromData
	...
	fun:GTK2INT$_$TGTK2WIDGETSET_$__$$_RAWIMAGE_CREATEBITMAPS$TRAWIMAGE$HBITMAP$HBITMAP$BOOLEAN$$BOOLEAN
	...
	fun:FORMS$_$TCUSTOMFORM_$__$$_SHOWMODAL$$LONGINT
	...
}
{
   FalsePos_at_TCUSTOMIMAGELISTRESOLUTION
   Memcheck:Cond
	...
	fun:fpc_chararray_to_ansistr
	fun:IMGLIST$_$TCUSTOMIMAGELISTRESOLUTION_$__$$_READDATA$TSTREAM
	...
}
{
   FONTISDOUBLEBYTECHARSFONT__pango_layout_get_pixel_size
   Memcheck:Leak
   ...
   fun:pango_layout_get_pixel_size
   fun:GTK2PROC_$$_FONTISDOUBLEBYTECHARSFONT$PPANGOLAYOUT$$BOOLEAN
   ...
}
{
	Leak_in_libfontconfig.so.1.10.1
	Memcheck:Leak
	...
	obj:/usr/lib/x86_64-linux-gnu/libfontconfig.so.1.10.1
	...
}

{
	FalsPos_gdk_window_ensure_native
	Memcheck:Leak
	...
	fun:gdk_window_ensure_native
	fun:gdk_pointer_grab
	...
	fun:FORMS$_$TSCREEN_$__$$_SETCURSOR$TCURSOR
	...
}
{
	FalsPos_or_GTK_Leak_libgobject-2.0.so
	Memcheck:Leak
	...
	obj:/usr/lib/x86_64-linux-gnu/libgobject-2.0.so*
	...
}


